@startuml

digraph rabbitmq {
    rankdir=LR;
    graph [fontsize=10 fontname="Verdana" compound=true label="Rabbit MQ Basic Concepts"];
    node [shape=record fontsize=10 fontname="Verdana"];

    producer [style=rounded];

    subgraph cluster_p_connection {
        graph [label=connection]
        p_channel1 [label=channel];
        p_channel2 [label=channel];
        p_channel3 [label=channel];
    }

    subgraph cluster_c_connection {
        graph [label=connection]
        c_channel1 [label=channel];
        c_channel2 [label=channel];
        c_channel3 [label=channel];
    }

    subgraph cluster_broker1 {
        graph [label="broker1"];
        vhost2;
        "..."
        subgraph cluster_vhost {
            graph [label="vhost /"];
            exchange1 [label="fanout exchange"];
            exchange2 [label="direct exchange"];
            exchange3 [label="topic exchange"];
            exchange4 [label="header exchange"];
            subgraph cluster_queue {
                graph [label="queue1"];
                message1;
                message2;
            }
            queue2;
            queue3;
            exchange1:e->message1:W [ label="binding fanout" lhead=cluster_queue];
            exchange1:e->queue2:w [label=fanout];
            exchange2:e->queue2:w [label="same routekey"];
            exchange3:e->queue2:w [label="routekey mapping *,#"];
            exchange3:e->queue3:w;
            exchange4:e->queue3:w [label="header mapping"];

        }
    }
    consumer [style=rounded];


    producer -> p_channel2 [lhead=cluster_p_connection];
    p_channel2 -> exchange2 [ltail=cluster_p_connection lhead=cluster_vhost];
    c_channel2 -> consumer [ltail=cluster_c_connection];
    queue2:e -> c_channel2 [ltail=cluster_vhost lhead=cluster_c_connection];

}
@enduml